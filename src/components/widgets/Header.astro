---
import { Icon } from 'astro-icon/components';
import Button from '~/components/ui/Button.astro';

import type { CallToAction } from '~/types';
import Navigation from "../navbar/Navigation.astro";

interface Link {
    text?: string;
    href?: string;
    ariaLabel?: string;
    icon?: string;
}

interface MenuLink extends Link {
    links?: Array<MenuLink>;
}

export interface Props {
    id?: string;
    links?: Array<MenuLink>;
    actions?: Array<CallToAction>;
    isSticky?: boolean;
    isDark?: boolean;
    isFullWidth?: boolean;
    showToggleTheme?: boolean;
    showRssFeed?: boolean;
    position?: string;
}

const {
    id = 'header',
    links = [],
    actions = [],
    isSticky = false,
    isDark = false,
    isFullWidth = false,
    showToggleTheme = false,
    showRssFeed = false,
    position = 'center',
} = Astro.props;

---
<header
        class:list={[
            'z-40 fixed flex-none mx-auto w-full py-xs px-custom',
            'border-b border-gray-50/0 transition-all duration-500 ease-in-out',
            'h-20 text-light bg-primary',
        ]}
        id={id}
>
        <div class="container-custom">
            <Navigation />
        </div>
</header>

<!--<script type="text/javascript">-->
<!--    document.addEventListener('DOMContentLoaded', () => {-->
<!--        const header = document.querySelector('header');-->
<!--        const isHome = window.location.pathname === '/socrates-2025/';-->

<!--        if (!isHome) {-->
<!--            header.classList.remove('bg-transparent', 'dark:bg-transparent');-->
<!--            header.classList.add('bg-primary', 'dark:bg-primary');-->
<!--        } else {-->
<!--            // Initial state on load-->
<!--            header.classList.add('bg-transparent', 'dark:bg-transparent');-->
<!--            header.classList.remove('bg-primary', 'dark:bg-primary');-->

<!--            // Update on scroll-->
<!--            const onScroll = () => {-->
<!--                const scrolledDown = window.scrollY > 200;-->
<!--                header.classList.toggle('bg-primary', scrolledDown);-->
<!--                header.classList.toggle('dark:bg-contrast', scrolledDown);-->
<!--                header.classList.toggle('bg-transparent', !scrolledDown);-->
<!--                header.classList.toggle('dark:bg-transparent', !scrolledDown);-->
<!--            };-->

<!--            window.addEventListener('scroll', onScroll);-->
<!--            onScroll(); // Trigger once to set initial state-->
<!--        }-->
<!--    });-->
<!--</script>-->

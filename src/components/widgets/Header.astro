---
import type { CallToAction } from '~/types';
import Navigation from "../navbar/Navigation.astro";

interface Link {
    text?: string;
    href?: string;
    ariaLabel?: string;
    icon?: string;
}

interface MenuLink extends Link {
    links?: Array<MenuLink>;
}

export interface Props {
    id?: string;
    links?: Array<MenuLink>;
    actions?: Array<CallToAction>;
    isSticky?: boolean;
    isDark?: boolean;
    isFullWidth?: boolean;
    showToggleTheme?: boolean;
    showRssFeed?: boolean;
    position?: string;
}

const {
    id = 'header',
} = Astro.props;

const siteUrl = Astro.site;

---
<header
        class:list={[
            'z-40 fixed flex-none mx-auto w-full py-xs px-md md:px-xl',
            'border-b border-gray-50/0 transition-all duration-500 ease-in-out',
            'h-20 text-light bg-transparent',
        ]}
        id={id}
>
        <div class="max-w-6xl mx-auto">
            <Navigation />
        </div>
</header>

<script is:inline type="text/javascript" define:vars={{siteUrl}}>
    document.addEventListener('DOMContentLoaded', () => {
        const header = document.querySelector('header');

        const normalizedPath = window.location.pathname.replace(/\/+$/, ''); // remove trailing slash
        const basePath = siteUrl
            ? siteUrl.replace(/^https?:\/\/[^/]+/, '').replace(/\/+$/, '')
            : '';

        console.log('normalizedPath: ', normalizedPath);
        console.log('basePath: ', basePath);

        const isHome = normalizedPath === basePath;

        if (!isHome) {
            header.classList.remove('bg-transparent');
            header.classList.add('bg-tertiary');
        } else {
            // Initial state on load
            header.classList.add('bg-transparent');
            header.classList.remove('bg-tertiary');

            // Update on scroll
            const onScroll = () => {
                const scrolledDown = window.scrollY > 200;
                header.classList.toggle('bg-tertiary', scrolledDown);
                header.classList.toggle('bg-transparent', !scrolledDown);
            };

            window.addEventListener('scroll', onScroll);
            onScroll(); // Trigger once to set initial state
        }
    });
</script>
